generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-1.1.x"]
  output        = "./migration-client"
}

datasource db {
  provider = "postgresql"
  url      = env("MIGRATION_DATABASE_URL")
}

model auth_group {
  id                     Int                      @id @default(autoincrement())
  name                   String                   @unique @db.VarChar(150)
  auth_group_permissions auth_group_permissions[]

  @@index([name], map: "auth_group_name_a6ea08ec_like")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model auth_group_permissions {
  id              BigInt          @id @default(autoincrement())
  group_id        Int
  permission_id   Int
  auth_permission auth_permission @relation(fields: [permission_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "auth_group_permissio_permission_id_84c5c92e_fk_auth_perm")
  auth_group      auth_group      @relation(fields: [group_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "auth_group_permissions_group_id_b120cbf9_fk_auth_group_id")

  @@unique([group_id, permission_id], map: "auth_group_permissions_group_id_permission_id_0cd325b0_uniq")
  @@index([group_id], map: "auth_group_permissions_group_id_b120cbf9")
  @@index([permission_id], map: "auth_group_permissions_permission_id_84c5c92e")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model auth_permission {
  id                     Int                      @id @default(autoincrement())
  name                   String                   @db.VarChar(255)
  content_type_id        Int
  codename               String                   @db.VarChar(100)
  auth_group_permissions auth_group_permissions[]
  django_content_type    django_content_type      @relation(fields: [content_type_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "auth_permission_content_type_id_2f476e4b_fk_django_co")

  @@unique([content_type_id, codename], map: "auth_permission_content_type_id_codename_01ab375a_uniq")
  @@index([content_type_id], map: "auth_permission_content_type_id_2f476e4b")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model django_admin_log {
  id                  Int                  @id @default(autoincrement())
  action_time         DateTime             @db.Timestamptz(6)
  object_id           String?
  object_repr         String               @db.VarChar(200)
  action_flag         Int                  @db.SmallInt
  change_message      String
  content_type_id     Int?
  user_id             BigInt
  django_content_type django_content_type? @relation(fields: [content_type_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "django_admin_log_content_type_id_c4bce8eb_fk_django_co")
  main_user           main_user            @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "django_admin_log_user_id_c564eba6_fk")

  @@index([content_type_id], map: "django_admin_log_content_type_id_c4bce8eb")
  @@index([user_id], map: "django_admin_log_user_id_c564eba6")
}

model django_content_type {
  id               Int                @id @default(autoincrement())
  app_label        String             @db.VarChar(100)
  model            String             @db.VarChar(100)
  auth_permission  auth_permission[]
  django_admin_log django_admin_log[]

  @@unique([app_label, model], map: "django_content_type_app_label_model_76bd3d3b_uniq")
}

model django_migrations {
  id      BigInt   @id @default(autoincrement())
  app     String   @db.VarChar(255)
  name    String   @db.VarChar(255)
  applied DateTime @db.Timestamptz(6)
}

model django_session {
  session_key  String   @id @db.VarChar(40)
  session_data String
  expire_date  DateTime @db.Timestamptz(6)

  @@index([expire_date], map: "django_session_expire_date_a5c62663")
  @@index([session_key], map: "django_session_session_key_c0390e0f_like")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model main_base {
  id                                                                  BigInt                           @id @default(autoincrement())
  created                                                             DateTime                         @db.Timestamptz(6)
  modified                                                            DateTime                         @db.Timestamptz(6)
  title                                                               String                           @db.VarChar(100)
  owner_id                                                            BigInt
  contact                                                             String?                          @db.VarChar(254)
  contact_state                                                       String?                          @db.VarChar(10)
  description                                                         String?
  state                                                               String                           @db.VarChar(10)
  profile_image_id                                                    BigInt?                          @unique(map: "main_base_profile_image_id_005052c2_uniq")
  is_certified                                                        Boolean
  cover_image_id                                                      BigInt?                          @unique(map: "main_base_cover_image_id_1154646c_uniq")
  national_cartography_website                                        String?                          @db.VarChar(200)
  social_media_facebook                                               String?                          @db.VarChar(200)
  social_media_linkedin                                               String?                          @db.VarChar(200)
  social_media_mastodon                                               String?                          @db.VarChar(200)
  social_media_twitter                                                String?                          @db.VarChar(200)
  website                                                             String?                          @db.VarChar(200)
  own_resource_count                                                  Int                              @db.SmallInt
  pinned_resources_count                                              Int                              @db.SmallInt
  visit_count                                                         Int                              @db.SmallInt
  show_latest_additions                                               Boolean
  bookmarked_count                                                    Int                              @db.SmallInt
  main_resizableimage_main_base_cover_image_idTomain_resizableimage   main_resizableimage?             @relation("main_base_cover_image_idTomain_resizableimage", fields: [cover_image_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "main_base_cover_image_id_1154646c_fk_main_resizableimage_id")
  main_user                                                           main_user                        @relation(fields: [owner_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "main_base_owner_id_ee645c3d_fk")
  main_resizableimage_main_base_profile_image_idTomain_resizableimage main_resizableimage?             @relation("main_base_profile_image_idTomain_resizableimage", fields: [profile_image_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "main_base_profile_image_id_005052c2_fk_main_resizableimage_id")
  main_base_admins                                                    main_base_admins[]
  main_base_authorized_user_tags                                      main_base_authorized_user_tags[]
  main_base_authorized_users                                          main_base_authorized_users[]
  main_base_contributor_tags                                          main_base_contributor_tags[]
  main_base_contributors                                              main_base_contributors[]
  main_base_pinned_collections                                        main_base_pinned_collections[]
  main_base_pinned_resources                                          main_base_pinned_resources[]
  main_base_tags                                                      main_base_tags[]
  main_basebookmark                                                   main_basebookmark[]
  main_basesection                                                    main_basesection[]
  main_basevisit                                                      main_basevisit[]
  main_collection                                                     main_collection[]
  main_resource                                                       main_resource[]
  main_resource_creator_bases                                         main_resource_creator_bases[]
  main_tagcategory                                                    main_tagcategory[]

  @@index([owner_id], map: "main_base_owner_id_ee645c3d")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model main_base_admins {
  id        BigInt    @id @default(autoincrement())
  base_id   BigInt
  user_id   BigInt
  main_base main_base @relation(fields: [base_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "main_base_admins_base_id_3294673f_fk_main_base_id")
  main_user main_user @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "main_base_admins_user_id_2b75b2ff_fk")

  @@unique([base_id, user_id], map: "main_base_admins_base_id_user_id_b323e2d0_uniq")
  @@index([base_id], map: "main_base_admins_base_id_3294673f")
  @@index([user_id], map: "main_base_admins_user_id_2b75b2ff")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model main_base_authorized_user_tags {
  id        BigInt    @id @default(autoincrement())
  base_id   BigInt
  tag_id    BigInt
  main_base main_base @relation(fields: [base_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "main_base_authorized_user_tags_base_id_4f2ceace_fk_main_base_id")
  main_tag  main_tag  @relation(fields: [tag_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "main_base_authorized_user_tags_tag_id_7a43c67e_fk_main_tag_id")

  @@unique([base_id, tag_id], map: "main_base_authorized_user_tags_base_id_tag_id_fb057997_uniq")
  @@index([base_id], map: "main_base_authorized_user_tags_base_id_4f2ceace")
  @@index([tag_id], map: "main_base_authorized_user_tags_tag_id_7a43c67e")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model main_base_authorized_users {
  id        BigInt    @id @default(autoincrement())
  base_id   BigInt
  user_id   BigInt
  main_base main_base @relation(fields: [base_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "main_base_authorized_users_base_id_d0b673c4_fk_main_base_id")
  main_user main_user @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "main_base_authorized_users_user_id_74e56774_fk_main_user_id")

  @@unique([base_id, user_id], map: "main_base_authorized_users_base_id_user_id_b259f72c_uniq")
  @@index([base_id], map: "main_base_authorized_users_base_id_d0b673c4")
  @@index([user_id], map: "main_base_authorized_users_user_id_74e56774")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model main_base_contributor_tags {
  id        BigInt    @id @default(autoincrement())
  base_id   BigInt
  tag_id    BigInt
  main_base main_base @relation(fields: [base_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "main_base_contributor_tags_base_id_00cc675d_fk_main_base_id")
  main_tag  main_tag  @relation(fields: [tag_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "main_base_contributor_tags_tag_id_10887bf8_fk_main_tag_id")

  @@unique([base_id, tag_id], map: "main_base_contributor_tags_base_id_tag_id_e604f8b4_uniq")
  @@index([base_id], map: "main_base_contributor_tags_base_id_00cc675d")
  @@index([tag_id], map: "main_base_contributor_tags_tag_id_10887bf8")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model main_base_contributors {
  id        BigInt    @id @default(autoincrement())
  base_id   BigInt
  user_id   BigInt
  main_base main_base @relation(fields: [base_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "main_base_contributors_base_id_bcf7f3df_fk_main_base_id")
  main_user main_user @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "main_base_contributors_user_id_af42a328_fk_main_user_id")

  @@unique([base_id, user_id], map: "main_base_contributors_base_id_user_id_8f7aa326_uniq")
  @@index([base_id], map: "main_base_contributors_base_id_bcf7f3df")
  @@index([user_id], map: "main_base_contributors_user_id_af42a328")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model main_base_pinned_collections {
  id              BigInt          @id @default(autoincrement())
  base_id         BigInt
  collection_id   BigInt
  main_collection main_collection @relation(fields: [collection_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "main_base_pinned_col_collection_id_67f8717a_fk_main_coll")
  main_base       main_base       @relation(fields: [base_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "main_base_pinned_collections_base_id_788bbd0f_fk_main_base_id")

  @@unique([base_id, collection_id], map: "main_base_pinned_collect_base_id_collection_id_fd182bad_uniq")
  @@index([base_id], map: "main_base_pinned_collections_base_id_788bbd0f")
  @@index([collection_id], map: "main_base_pinned_collections_collection_id_67f8717a")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model main_base_pinned_resources {
  id            BigInt        @id @default(autoincrement())
  base_id       BigInt
  resource_id   BigInt
  main_resource main_resource @relation(fields: [resource_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "main_base_pinned_res_resource_id_ac2415df_fk_main_reso")
  main_base     main_base     @relation(fields: [base_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "main_base_pinned_resources_base_id_c934f146_fk_main_base_id")

  @@unique([base_id, resource_id], map: "main_base_pinned_resources_base_id_resource_id_a103488c_uniq")
  @@index([base_id], map: "main_base_pinned_resources_base_id_c934f146")
  @@index([resource_id], map: "main_base_pinned_resources_resource_id_ac2415df")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model main_base_tags {
  id        BigInt    @id @default(autoincrement())
  base_id   BigInt
  tag_id    BigInt
  main_base main_base @relation(fields: [base_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "main_base_tags_base_id_0ba05dc9_fk_main_base_id")
  main_tag  main_tag  @relation(fields: [tag_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "main_base_tags_tag_id_4f611f2f_fk_main_tag_id")

  @@unique([base_id, tag_id], map: "main_base_tags_base_id_tag_id_fee724c8_uniq")
  @@index([base_id], map: "main_base_tags_base_id_0ba05dc9")
  @@index([tag_id], map: "main_base_tags_tag_id_4f611f2f")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model main_basebookmark {
  id        BigInt    @id @default(autoincrement())
  created   DateTime  @db.Timestamptz(6)
  modified  DateTime  @db.Timestamptz(6)
  base_id   BigInt
  user_id   BigInt
  main_base main_base @relation(fields: [base_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "main_basebookmark_base_id_843479b7_fk_main_base_id")
  main_user main_user @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "main_basebookmark_user_id_ab605466_fk_main_user_id")

  @@unique([base_id, user_id], map: "main_basebookmark_base_id_user_id_7f68f639_uniq")
  @@index([base_id], map: "main_basebookmark_base_id_843479b7")
  @@index([user_id], map: "main_basebookmark_user_id_ab605466")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model main_basesection {
  id                           BigInt                         @id @default(autoincrement())
  created                      DateTime                       @db.Timestamptz(6)
  modified                     DateTime                       @db.Timestamptz(6)
  title                        String                         @db.VarChar(100)
  description                  String?                        @db.VarChar(240)
  type                         String                         @db.VarChar(32)
  position                     Int                            @db.SmallInt
  base_id                      BigInt
  main_base                    main_base                      @relation(fields: [base_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "main_basesection_base_id_f94187d2_fk_main_base_id")
  main_basesection_collections main_basesection_collections[]
  main_basesection_resources   main_basesection_resources[]

  @@index([base_id], map: "main_basesection_base_id_f94187d2")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model main_basesection_collections {
  id               BigInt           @id @default(autoincrement())
  basesection_id   BigInt
  collection_id    BigInt
  main_basesection main_basesection @relation(fields: [basesection_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "main_basesection_col_basesection_id_b694261b_fk_main_base")
  main_collection  main_collection  @relation(fields: [collection_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "main_basesection_col_collection_id_f4dcf76d_fk_main_coll")

  @@unique([basesection_id, collection_id], map: "main_basesection_collect_basesection_id_collectio_65275e53_uniq")
  @@index([basesection_id], map: "main_basesection_collections_basesection_id_b694261b")
  @@index([collection_id], map: "main_basesection_collections_collection_id_f4dcf76d")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model main_basesection_resources {
  id               BigInt           @id @default(autoincrement())
  basesection_id   BigInt
  resource_id      BigInt
  main_basesection main_basesection @relation(fields: [basesection_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "main_basesection_res_basesection_id_1b45220e_fk_main_base")
  main_resource    main_resource    @relation(fields: [resource_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "main_basesection_res_resource_id_ecc616a0_fk_main_reso")

  @@unique([basesection_id, resource_id], map: "main_basesection_resourc_basesection_id_resource__f01cd102_uniq")
  @@index([basesection_id], map: "main_basesection_resources_basesection_id_1b45220e")
  @@index([resource_id], map: "main_basesection_resources_resource_id_ecc616a0")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model main_basevisit {
  id          BigInt    @id @default(autoincrement())
  date        DateTime  @db.Date
  ip_hash     String    @db.VarChar(64)
  instance_id BigInt
  main_base   main_base @relation(fields: [instance_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "main_basevisit_instance_id_73943829_fk_main_base_id")

  @@unique([instance_id, date, ip_hash], map: "main_basevisit_instance_id_date_ip_hash_b6679fec_uniq")
  @@index([instance_id], map: "main_basevisit_instance_id_73943829")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model main_collection {
  id                           BigInt                         @id @default(autoincrement())
  created                      DateTime                       @db.Timestamptz(6)
  modified                     DateTime                       @db.Timestamptz(6)
  name                         String                         @db.VarChar(100)
  base_id                      BigInt
  profile_image_id             BigInt?                        @unique(map: "main_collection_profile_image_id_ddc98e3e_uniq")
  description                  String                         @db.VarChar(100)
  main_base_pinned_collections main_base_pinned_collections[]
  main_basesection_collections main_basesection_collections[]
  main_base                    main_base                      @relation(fields: [base_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "main_collection_base_id_9ef5e547_fk_main_base_id")
  main_resizableimage          main_resizableimage?           @relation(fields: [profile_image_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "main_collection_profile_image_id_ddc98e3e_fk_main_resi")
  main_collection_resources    main_collection_resources[]

  @@unique([name, base_id], map: "main_collection_name_base_id_9ab34bca_uniq")
  @@index([base_id], map: "main_collection_base_id_9ef5e547")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model main_collection_resources {
  id              BigInt          @id @default(autoincrement())
  collection_id   BigInt
  resource_id     BigInt
  main_collection main_collection @relation(fields: [collection_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "main_collection_reso_collection_id_4a72a156_fk_main_coll")
  main_resource   main_resource   @relation(fields: [resource_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "main_collection_reso_resource_id_635d2bc7_fk_main_reso")

  @@unique([collection_id, resource_id], map: "main_collection_resource_collection_id_resource_i_4cf77414_uniq")
  @@index([collection_id], map: "main_collection_resources_collection_id_4a72a156")
  @@index([resource_id], map: "main_collection_resources_resource_id_635d2bc7")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model main_contentblock {
  id                              BigInt                      @id @default(autoincrement())
  created                         DateTime                    @db.Timestamptz(6)
  modified                        DateTime                    @db.Timestamptz(6)
  title                           String?                     @db.VarChar(50)
  annotation                      String?
  is_draft                        Boolean
  section_id                      BigInt
  resource_id                     BigInt
  order                           BigInt
  nb_col                          Int
  license_knowledge               String                      @db.VarChar(10)
  use_resource_license_and_access Boolean
  license_text_id                 BigInt?                     @unique(map: "main_contentblock_license_text_id_800c9995_uniq")
  main_licensetext                main_licensetext?           @relation(fields: [license_text_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "main_contentblock_license_text_id_800c9995_fk_main_lice")
  main_resource                   main_resource               @relation(fields: [resource_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "main_contentblock_resource_id_f248dbed_fk_main_resource_id")
  main_contentsection             main_contentsection         @relation(fields: [section_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "main_contentblock_section_id_ff22629d_fk_main_contentsection_id")
  main_contentblock_tags          main_contentblock_tags[]
  main_filecontent                main_filecontent?
  main_linkcontent                main_linkcontent?
  main_linkedresourcecontent      main_linkedresourcecontent?
  main_textcontent                main_textcontent?

  @@unique([order, section_id], map: "main_contentblock_order_section_id_90d51aae_uniq")
  @@index([section_id], map: "main_contentblock_parent_folder_id_f6e2bde2")
  @@index([resource_id], map: "main_contentblock_resource_id_f248dbed")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model main_contentblock_tags {
  id                BigInt            @id @default(autoincrement())
  contentblock_id   BigInt
  tag_id            BigInt
  main_contentblock main_contentblock @relation(fields: [contentblock_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "main_contentblock_ta_contentblock_id_23492678_fk_main_cont")
  main_tag          main_tag          @relation(fields: [tag_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "main_contentblock_tags_tag_id_fa665475_fk_main_tag_id")

  @@unique([contentblock_id, tag_id], map: "main_contentblock_tags_contentblock_id_tag_id_19eb37b4_uniq")
  @@index([contentblock_id], map: "main_contentblock_tags_contentblock_id_23492678")
  @@index([tag_id], map: "main_contentblock_tags_tag_id_fa665475")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model main_contentsection {
  id                BigInt              @id @default(autoincrement())
  created           DateTime            @db.Timestamptz(6)
  modified          DateTime            @db.Timestamptz(6)
  title             String?             @db.VarChar(100)
  resource_id       BigInt
  is_foldable       Boolean
  order             BigInt
  main_contentblock main_contentblock[]
  main_resource     main_resource       @relation(fields: [resource_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "main_contentsection_resource_id_4446f166_fk_main_resource_id")

  @@unique([resource_id, order], map: "main_contentsection_resource_id_order_2002a7f0_uniq")
  @@index([resource_id], map: "main_contentsection_resource_id_4446f166")
}

model main_criterion {
  name            String            @db.VarChar(50)
  description     String
  order           Int
  slug            String            @id @db.VarChar(30)
  main_evaluation main_evaluation[]

  @@index([slug], map: "main_criterion_slug_edeb69d0_like")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model main_evaluation {
  id             BigInt         @id @default(autoincrement())
  created        DateTime       @db.Timestamptz(6)
  modified       DateTime       @db.Timestamptz(6)
  evaluation     Int            @db.SmallInt
  comment        String
  criterion_id   String         @db.VarChar(30)
  resource_id    BigInt
  user_id        BigInt
  main_criterion main_criterion @relation(fields: [criterion_id], references: [slug], onDelete: NoAction, onUpdate: NoAction, map: "main_evaluation_criterion_id_5ce2b287_fk_main_criterion_slug")
  main_resource  main_resource  @relation(fields: [resource_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "main_evaluation_resource_id_a20e1395_fk_main_resource_id")
  main_user      main_user      @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "main_evaluation_user_id_dbf245f0_fk_main_user_id")

  @@unique([resource_id, user_id, criterion_id], map: "main_evaluation_resource_id_user_id_criterion_id_a7c9f220_uniq")
  @@index([criterion_id], map: "main_evaluation_criterion_id_5ce2b287")
  @@index([criterion_id], map: "main_evaluation_criterion_id_5ce2b287_like")
  @@index([resource_id], map: "main_evaluation_resource_id_a20e1395")
  @@index([user_id], map: "main_evaluation_user_id_dbf245f0")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model main_externalproducer {
  id            BigInt        @id @default(autoincrement())
  created       DateTime      @db.Timestamptz(6)
  modified      DateTime      @db.Timestamptz(6)
  name          String        @db.VarChar(100)
  email_contact String?       @db.VarChar(254)
  validated     Boolean
  resource_id   BigInt
  occupation_id BigInt?
  website_url   String?       @db.VarChar(150)
  main_tag      main_tag?     @relation(fields: [occupation_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "main_externalproducer_occupation_id_35bf62e2_fk_main_tag_id")
  main_resource main_resource @relation(fields: [resource_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "main_externalproducer_resource_id_28e099bf_fk_main_resource_id")

  @@index([occupation_id], map: "main_externalproducer_occupation_id_35bf62e2")
  @@index([resource_id], map: "main_externalproducer_resource_id_28e099bf")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model main_filecontent {
  contentblock_ptr_id BigInt            @id
  file                String            @db.VarChar(100)
  with_preview        Boolean
  image_alt           String?           @db.VarChar(100)
  main_contentblock   main_contentblock @relation(fields: [contentblock_ptr_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "main_filecontent_contentblock_ptr_id_e89f0cfe_fk_main_cont")
}

model main_intro {
  id       BigInt  @id @default(autoincrement())
  content  String
  title    String  @db.VarChar(100)
  order    Int
  slug     String  @db.VarChar(50)
  image    String? @db.VarChar(100)
  position String  @db.VarChar(6)
}

model main_licensetext {
  id                BigInt             @id @default(autoincrement())
  created           DateTime           @db.Timestamptz(6)
  modified          DateTime           @db.Timestamptz(6)
  name              String?            @db.VarChar(60)
  link              String?            @db.VarChar(200)
  file              String?            @db.VarChar(100)
  main_contentblock main_contentblock?
  main_resource     main_resource?
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model main_linkcontent {
  contentblock_ptr_id BigInt            @id
  link                String?           @db.VarChar(200)
  with_preview        Boolean
  target_description  String?           @db.VarChar(180)
  target_image        String?           @db.VarChar(200)
  target_title        String?           @db.VarChar(80)
  main_contentblock   main_contentblock @relation(fields: [contentblock_ptr_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "main_linkcontent_contentblock_ptr_id_d0b5ee65_fk_main_cont")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model main_linkedresourcecontent {
  contentblock_ptr_id BigInt            @id
  linked_resource_id  BigInt?
  main_contentblock   main_contentblock @relation(fields: [contentblock_ptr_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "main_linkedresourcec_contentblock_ptr_id_e986ec18_fk_main_cont")
  main_resource       main_resource?    @relation(fields: [linked_resource_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "main_linkedresourcec_linked_resource_id_16b452d7_fk_main_reso")

  @@index([linked_resource_id], map: "main_linkedresourcecontent_linked_resource_id_16b452d7")
}

model main_page {
  created      DateTime @db.Timestamptz(6)
  modified     DateTime @db.Timestamptz(6)
  content      String
  description  String   @db.VarChar(180)
  icon         String   @db.VarChar(50)
  order        Int
  show_in_menu Boolean
  slug         String   @id @db.VarChar(100)
  title        String   @db.VarChar(50)

  @@index([slug], map: "main_page_slug_c8d8a9a2_like")
}

model main_resizableimage {
  id                                                        BigInt           @id @default(autoincrement())
  image                                                     String           @db.VarChar(100)
  cropped_image                                             String           @db.VarChar(100)
  relative_height                                           Float
  relative_left                                             Float
  relative_top                                              Float
  relative_width                                            Float
  main_base_main_base_cover_image_idTomain_resizableimage   main_base?       @relation("main_base_cover_image_idTomain_resizableimage")
  main_base_main_base_profile_image_idTomain_resizableimage main_base?       @relation("main_base_profile_image_idTomain_resizableimage")
  main_collection                                           main_collection?
  main_resource                                             main_resource?
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model main_resource {
  id                                                                                                    BigInt                               @id @default(autoincrement())
  created                                                                                               DateTime                             @db.Timestamptz(6)
  modified                                                                                              DateTime                             @db.Timestamptz(6)
  title                                                                                                 String                               @db.VarChar(100)
  description                                                                                           String?                              @db.VarChar(560)
  creator_id                                                                                            BigInt?
  root_base_id                                                                                          BigInt?
  producer_state                                                                                        String?                              @db.VarChar(10)
  is_linked_to_a_territory                                                                              Boolean?
  access_requires_user_account                                                                          Boolean?
  state                                                                                                 String                               @db.VarChar(10)
  resource_created_on                                                                                   String?                              @db.VarChar(50)
  label_details                                                                                         String?
  label_state                                                                                           String                               @db.VarChar(10)
  is_grid_view_enabled                                                                                  Boolean
  has_global_license                                                                                    Boolean
  license_text_id                                                                                       BigInt?                              @unique(map: "main_resource_license_text_id_3be5d1cf_uniq")
  profile_image_id                                                                                      BigInt?                              @unique(map: "main_resource_profile_image_id_70655eac_uniq")
  can_evaluate                                                                                          Boolean
  main_base_pinned_resources                                                                            main_base_pinned_resources[]
  main_basesection_resources                                                                            main_basesection_resources[]
  main_collection_resources                                                                             main_collection_resources[]
  main_contentblock                                                                                     main_contentblock[]
  main_contentsection                                                                                   main_contentsection[]
  main_evaluation                                                                                       main_evaluation[]
  main_externalproducer                                                                                 main_externalproducer[]
  main_linkedresourcecontent                                                                            main_linkedresourcecontent[]
  main_user                                                                                             main_user?                           @relation(fields: [creator_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "main_resource_creator_id_7be5923d_fk")
  main_licensetext                                                                                      main_licensetext?                    @relation(fields: [license_text_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "main_resource_license_text_id_3be5d1cf_fk_main_licensetext_id")
  main_resizableimage                                                                                   main_resizableimage?                 @relation(fields: [profile_image_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "main_resource_profile_image_id_70655eac_fk_main_resi")
  main_base                                                                                             main_base?                           @relation(fields: [root_base_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "main_resource_root_base_id_31624faa_fk_main_base_id")
  main_resource_authorized_user_tags                                                                    main_resource_authorized_user_tags[]
  main_resource_authorized_users                                                                        main_resource_authorized_users[]
  main_resource_confirmed_duplicates_main_resource_confirmed_duplicates_from_resource_idTomain_resource main_resource_confirmed_duplicates[] @relation("main_resource_confirmed_duplicates_from_resource_idTomain_resource")
  main_resource_confirmed_duplicates_main_resource_confirmed_duplicates_to_resource_idTomain_resource   main_resource_confirmed_duplicates[] @relation("main_resource_confirmed_duplicates_to_resource_idTomain_resource")
  main_resource_contributors                                                                            main_resource_contributors[]
  main_resource_creator_bases                                                                           main_resource_creator_bases[]
  main_resource_ignored_duplicates_main_resource_ignored_duplicates_from_resource_idTomain_resource     main_resource_ignored_duplicates[]   @relation("main_resource_ignored_duplicates_from_resource_idTomain_resource")
  main_resource_ignored_duplicates_main_resource_ignored_duplicates_to_resource_idTomain_resource       main_resource_ignored_duplicates[]   @relation("main_resource_ignored_duplicates_to_resource_idTomain_resource")
  main_resource_internal_producers                                                                      main_resource_internal_producers[]
  main_resource_tags                                                                                    main_resource_tags[]
  main_resourcevisit                                                                                    main_resourcevisit[]

  @@index([creator_id], map: "main_resource_creator_id_7be5923d")
  @@index([root_base_id], map: "main_resource_root_base_id_31624faa")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model main_resource_authorized_user_tags {
  id            BigInt        @id @default(autoincrement())
  resource_id   BigInt
  tag_id        BigInt
  main_resource main_resource @relation(fields: [resource_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "main_resource_author_resource_id_335151e5_fk_main_reso")
  main_tag      main_tag      @relation(fields: [tag_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "main_resource_author_tag_id_7eb5cb3f_fk_main_tag_")

  @@unique([resource_id, tag_id], map: "main_resource_authorized_resource_id_tag_id_5f426581_uniq")
  @@index([resource_id], map: "main_resource_authorized_user_tags_resource_id_335151e5")
  @@index([tag_id], map: "main_resource_authorized_user_tags_tag_id_7eb5cb3f")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model main_resource_authorized_users {
  id            BigInt        @id @default(autoincrement())
  resource_id   BigInt
  user_id       BigInt
  main_resource main_resource @relation(fields: [resource_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "main_resource_author_resource_id_2fdb449d_fk_main_reso")
  main_user     main_user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "main_resource_authorized_users_user_id_c32d5cb4_fk_main_user_id")

  @@unique([resource_id, user_id], map: "main_resource_authorized_resource_id_user_id_04c57de4_uniq")
  @@index([resource_id], map: "main_resource_authorized_users_resource_id_2fdb449d")
  @@index([user_id], map: "main_resource_authorized_users_user_id_c32d5cb4")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model main_resource_confirmed_duplicates {
  id                                                                               BigInt        @id @default(autoincrement())
  from_resource_id                                                                 BigInt
  to_resource_id                                                                   BigInt
  main_resource_main_resource_confirmed_duplicates_from_resource_idTomain_resource main_resource @relation("main_resource_confirmed_duplicates_from_resource_idTomain_resource", fields: [from_resource_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "main_resource_confir_from_resource_id_9787561e_fk_main_reso")
  main_resource_main_resource_confirmed_duplicates_to_resource_idTomain_resource   main_resource @relation("main_resource_confirmed_duplicates_to_resource_idTomain_resource", fields: [to_resource_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "main_resource_confir_to_resource_id_3f75eedb_fk_main_reso")

  @@unique([from_resource_id, to_resource_id], map: "main_resource_confirmed__from_resource_id_to_reso_1a9711c5_uniq")
  @@index([from_resource_id], map: "main_resource_confirmed_duplicates_from_resource_id_9787561e")
  @@index([to_resource_id], map: "main_resource_confirmed_duplicates_to_resource_id_3f75eedb")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model main_resource_contributors {
  id            BigInt        @id @default(autoincrement())
  resource_id   BigInt
  user_id       BigInt
  main_resource main_resource @relation(fields: [resource_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "main_resource_contri_resource_id_3318e9fb_fk_main_reso")
  main_user     main_user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "main_resource_contributors_user_id_e601780b_fk_main_user_id")

  @@unique([resource_id, user_id], map: "main_resource_contributors_resource_id_user_id_0a47b3f8_uniq")
  @@index([resource_id], map: "main_resource_contributors_resource_id_3318e9fb")
  @@index([user_id], map: "main_resource_contributors_user_id_e601780b")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model main_resource_creator_bases {
  id            BigInt        @id @default(autoincrement())
  resource_id   BigInt
  base_id       BigInt
  main_resource main_resource @relation(fields: [resource_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "main_resource_creato_resource_id_f607fcb3_fk_main_reso")
  main_base     main_base     @relation(fields: [base_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "main_resource_creator_bases_base_id_32d951c6_fk_main_base_id")

  @@unique([resource_id, base_id], map: "main_resource_creator_bases_resource_id_base_id_18d33c20_uniq")
  @@index([base_id], map: "main_resource_creator_bases_base_id_32d951c6")
  @@index([resource_id], map: "main_resource_creator_bases_resource_id_f607fcb3")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model main_resource_ignored_duplicates {
  id                                                                             BigInt        @id @default(autoincrement())
  from_resource_id                                                               BigInt
  to_resource_id                                                                 BigInt
  main_resource_main_resource_ignored_duplicates_from_resource_idTomain_resource main_resource @relation("main_resource_ignored_duplicates_from_resource_idTomain_resource", fields: [from_resource_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "main_resource_ignore_from_resource_id_ade3da48_fk_main_reso")
  main_resource_main_resource_ignored_duplicates_to_resource_idTomain_resource   main_resource @relation("main_resource_ignored_duplicates_to_resource_idTomain_resource", fields: [to_resource_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "main_resource_ignore_to_resource_id_9cbead6d_fk_main_reso")

  @@unique([from_resource_id, to_resource_id], map: "main_resource_ignored_du_from_resource_id_to_reso_fb1fbe11_uniq")
  @@index([from_resource_id], map: "main_resource_ignored_duplicates_from_resource_id_ade3da48")
  @@index([to_resource_id], map: "main_resource_ignored_duplicates_to_resource_id_9cbead6d")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model main_resource_internal_producers {
  id            BigInt        @id(map: "main_resource_internal_producer_pkey") @default(autoincrement())
  resource_id   BigInt
  user_id       BigInt
  main_resource main_resource @relation(fields: [resource_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "main_resource_intern_resource_id_fac9dc95_fk_main_reso")
  main_user     main_user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "main_resource_internal_producers_user_id_8295f8af_fk")

  @@unique([resource_id, user_id], map: "main_resource_internal_p_resource_id_user_id_a0044953_uniq")
  @@index([resource_id], map: "main_resource_internal_producer_resource_id_fac9dc95")
  @@index([user_id], map: "main_resource_internal_producer_user_id_dba94fea")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model main_resource_tags {
  id            BigInt        @id @default(autoincrement())
  resource_id   BigInt
  tag_id        BigInt
  main_resource main_resource @relation(fields: [resource_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "main_resource_tags_resource_id_8437cff8_fk_main_resource_id")
  main_tag      main_tag      @relation(fields: [tag_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "main_resource_tags_tag_id_aefabb8a_fk_main_tag_id")

  @@unique([resource_id, tag_id], map: "main_resource_tags_resource_id_tag_id_ba1c5b83_uniq")
  @@index([resource_id], map: "main_resource_tags_resource_id_8437cff8")
  @@index([tag_id], map: "main_resource_tags_tag_id_aefabb8a")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model main_resourcevisit {
  id            BigInt        @id @default(autoincrement())
  date          DateTime      @db.Date
  ip_hash       String        @db.VarChar(64)
  instance_id   BigInt
  main_resource main_resource @relation(fields: [instance_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "main_resourcevisit_instance_id_8a45a1aa_fk_main_resource_id")

  @@unique([instance_id, date, ip_hash], map: "main_resourcevisit_instance_id_date_ip_hash_74d2c6eb_uniq")
  @@index([instance_id], map: "main_resourcevisit_instance_id_8a45a1aa")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model main_seenintroslug {
  id        BigInt    @id @default(autoincrement())
  slug      String    @db.VarChar(50)
  user_id   BigInt
  main_user main_user @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "main_seenintroslug_user_id_281382e8_fk_main_user_id")

  @@unique([user_id, slug], map: "main_seenintroslug_user_id_slug_25568cb7_uniq")
  @@index([user_id], map: "main_seenintroslug_user_id_281382e8")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model main_tag {
  id                                 BigInt                               @id @default(autoincrement())
  created                            DateTime                             @db.Timestamptz(6)
  modified                           DateTime                             @db.Timestamptz(6)
  name                               String                               @db.VarChar(60)
  is_free                            Boolean
  is_draft                           Boolean
  definition                         String?
  category_id                        BigInt
  parent_tag_id                      BigInt?
  slug                               String?                              @db.VarChar(40)
  main_base_authorized_user_tags     main_base_authorized_user_tags[]
  main_base_contributor_tags         main_base_contributor_tags[]
  main_base_tags                     main_base_tags[]
  main_contentblock_tags             main_contentblock_tags[]
  main_externalproducer              main_externalproducer[]
  main_resource_authorized_user_tags main_resource_authorized_user_tags[]
  main_resource_tags                 main_resource_tags[]
  main_tagcategory                   main_tagcategory                     @relation(fields: [category_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "main_tag_category_id_5edb617a_fk_main_tagcategory_id")
  main_tag                           main_tag?                            @relation("main_tagTomain_tag", fields: [parent_tag_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "main_tag_parent_tag_id_2f750b4c_fk_main_tag_id")
  other_main_tag                     main_tag[]                           @relation("main_tagTomain_tag")
  main_user_tags                     main_user_tags[]

  @@unique([name, category_id, slug], map: "main_tag_name_category_id_slug_58a69ef5_uniq")
  @@index([category_id], map: "main_tag_category_id_5edb617a")
  @@index([parent_tag_id], map: "main_tag_parent_tag_id_2f750b4c")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model main_tagcategory {
  id                    BigInt     @id @default(autoincrement())
  created               DateTime   @db.Timestamptz(6)
  modified              DateTime   @db.Timestamptz(6)
  name                  String     @db.VarChar(40)
  required_to_be_public Boolean
  is_draft              Boolean
  accepts_free_tags     Boolean
  relates_to            String?    @db.VarChar(26)
  base_id               BigInt?
  maximum_tag_count     Int?       @db.SmallInt
  description           String?    @db.VarChar(100)
  slug                  String     @db.VarChar(40)
  group_tags_by_family  Boolean
  radio_display         Boolean
  order                 Float
  main_tag              main_tag[]
  main_base             main_base? @relation(fields: [base_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "main_tagcategory_base_id_69ab52ee_fk_main_base_id")

  @@unique([name, base_id, relates_to, slug], map: "main_tagcategory_name_base_id_relates_to_slug_546b1d88_uniq")
  @@index([base_id], map: "main_tagcategory_base_id_69ab52ee")
}

model main_textblock {
  created  DateTime @db.Timestamptz(6)
  modified DateTime @db.Timestamptz(6)
  content  String?
  slug     String   @id @db.VarChar(50)

  @@index([slug], map: "main_textblock_slug_4b49faf9_like")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model main_textcontent {
  contentblock_ptr_id BigInt            @id
  text                String?
  main_contentblock   main_contentblock @relation(fields: [contentblock_ptr_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "main_textcontent_contentblock_ptr_id_756a9073_fk_main_cont")
}

model main_user {
  id                               BigInt                             @id(map: "telescoop_auth_user_pkey") @default(autoincrement())
  password                         String                             @db.VarChar(128)
  last_login                       DateTime?                          @db.Timestamptz(6)
  email                            String                             @unique(map: "telescoop_auth_user_email_key") @db.VarChar(255)
  first_name                       String                             @db.VarChar(100)
  last_name                        String                             @db.VarChar(100)
  is_active                        Boolean
  is_admin                         Boolean
  is_superuser                     Boolean
  created                          DateTime                           @db.Timestamptz(6)
  modified                         DateTime                           @db.Timestamptz(6)
  cnfs_id                          Int?
  cnfs_id_organization             Int?
  django_admin_log                 django_admin_log[]
  main_base                        main_base[]
  main_base_admins                 main_base_admins[]
  main_base_authorized_users       main_base_authorized_users[]
  main_base_contributors           main_base_contributors[]
  main_basebookmark                main_basebookmark[]
  main_evaluation                  main_evaluation[]
  main_resource                    main_resource[]
  main_resource_authorized_users   main_resource_authorized_users[]
  main_resource_contributors       main_resource_contributors[]
  main_resource_internal_producers main_resource_internal_producers[]
  main_seenintroslug               main_seenintroslug[]
  main_user_tags                   main_user_tags[]
  main_usersearch                  main_usersearch[]

  @@index([email], map: "main_user_email_2597293b_like")
  @@index([email], map: "telescoop_auth_user_email_67218653_like")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model main_user_tags {
  id        BigInt    @id @default(autoincrement())
  user_id   BigInt
  tag_id    BigInt
  main_tag  main_tag  @relation(fields: [tag_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "main_user_tags_tag_id_7582e1ac_fk_main_tag_id")
  main_user main_user @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "main_user_tags_user_id_ea99b113_fk_main_user_id")

  @@unique([user_id, tag_id], map: "main_user_tags_user_id_tag_id_2bc3bb90_uniq")
  @@index([tag_id], map: "main_user_tags_tag_id_7582e1ac")
  @@index([user_id], map: "main_user_tags_user_id_ea99b113")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model main_usersearch {
  id        BigInt    @id @default(autoincrement())
  data_type String    @db.VarChar(9)
  name      String    @db.VarChar(30)
  query     Json
  user_id   BigInt
  main_user main_user @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "main_usersearch_user_id_4187d6e9_fk_main_user_id")

  @@index([user_id], map: "main_usersearch_user_id_4187d6e9")
}
